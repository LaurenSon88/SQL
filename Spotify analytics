--In this SQL code, I explore data from the Spotify top 50 songs of 2021 dataset from Kaggle. 
--First I downloaded the csv. file and examined the data to determine the column names and data types.
--I created a table in the database using SQL and added the data to the table by importing the CSV. file into the database.
--Finally, I formulated some questions and perform analytics on the data using SQL.

--Create table
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
);

--#1. Establish the top 10 popular songs with the artist and track name. List the most popular song first.
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

--#2. Which artists have 2 or more songs in the top 50?
SELECT DISTINCT artist_name, count(track_name) AS number_of_tracks
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING number_of_tracks>=2
ORDER BY number_of_tracks desc;

--#3. What are the songs have the least spoken words? List top 10.
SELECT artist_name,track_name,speechiness
FROM BIT_DB.Spotifydata
ORDER BY speechiness
LIMIT 10;

--#4. Which artists produce songs with the highest danceability and what is the danceabilty score?
SELECT artist_name, MAX(danceability) AS danceability
FROM BIT_DB.Spotifydata;

--#5. Classification of the tempo of each track.
SELECT track_name,tempo,
CASE
WHEN tempo <108 THEN 'Andante'
WHEN tempo BETWEEN 108 AND 120 THEN 'Moderato'
WHEN tempo BETWEEN 120 AND 168 THEN 'Allegro'
ELSE 'Presto'
END AS "tempo_marking"
FROM BIT_DB.Spotifydata
GROUP BY tempo
ORDER BY tempo desc;

--#6. How many tracks have a Presto tempo marking?
SELECT count(tempo_marking) AS Presto
FROM (SELECT 
CASE
WHEN tempo <108 THEN 'Andante'
WHEN tempo BETWEEN 108 AND 120 THEN 'Moderato'
WHEN tempo BETWEEN 120 AND 168 THEN 'Allegro'
ELSE 'Presto'
END AS "tempo_marking"
FROM BIT_DB.Spotifydata
GROUP BY tempo
ORDER BY tempo desc)
WHERE tempo_marking = 'Presto';

--#7. Who is shortest track(in minutes) by and what is the name of that track?
SELECT artist_name,track_name,MIN(duration_MS/60000.0) AS duration_mins
FROM BIT_DB.Spotifydata
HAVING duration_ms/60000.0;

--#8. What is the average length (in minutes) of the top 50 songs on Spotify?
SELECT AVG(duration_ms/60000.0) AS Average_duration
FROM BIT_DB.Spotifydata
HAVING sum(duration_ms/60000.0/50);
